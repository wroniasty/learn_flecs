static const uint8_t fs_standard[10343] =
{
	0x46, 0x53, 0x48, 0x0b, 0xa4, 0x8b, 0xef, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x28, // FSH....I......T(
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x33, 0x30, 0x0a, 0x6f, // ..#version 430.o
	0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, // ut vec4 bgfx_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // gColor;.#define 
	0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x62, 0x67, 0x66, // gl_FragColor bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x0a, 0x23, 0x64, 0x65, 0x66, // x_FragColor.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x20, 0x20, // ine texture2D   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, //        texture.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Lod       textur
	0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, // eLod.#define tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ture2DGrad      
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, // textureGrad.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, // ine texture2DPro
	0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, // jLod   texturePr
	0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // ojLod.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, // xture2DProjGrad 
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, //  textureProjGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // CubeLod     text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, // ureLod.#define t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, // extureCubeGrad  
	0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, //   textureGrad.#d
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, // efine texture3D 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //          texture
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, // 2DLodOffset text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, // ureLodOffset.#de
	0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, // fine attribute i
	0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // n.#define varyin
	0x67, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, // g in.#define bgf
	0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // xShadow2D(_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, // er, _coord)     
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // vec4_splat(textu
	0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // re(_sampler, _co
	0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, // ord) ).#define b
	0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, // gfxShadow2DProj(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, // ) vec4_splat(tex
	0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // tureProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x76, 0x61, 0x72, // r, _coord) ).var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // ying vec4 v_colo
	0x72, 0x30, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, // r0;.vec3 instMul
	0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, // (vec3 _vec, mat3
	0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _mtx) { return 
	0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, // ( (_vec) * (_mtx
	0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, // ) ); }.vec3 inst
	0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, // Mul(mat3 _mtx, v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // ec3 _vec) { retu
	0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, // rn ( (_mtx) * (_
	0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, // vec) ); }.vec4 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, // nstMul(vec4 _vec
	0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // , mat4 _mtx) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, // eturn ( (_vec) *
	0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, //  (_mtx) ); }.vec
	0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, // 4 instMul(mat4 _
	0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, // mtx, vec4 _vec) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, // { return ( (_mtx
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // ) * (_vec) ); }.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // float rcp(float 
	0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, // _a) { return 1.0
	0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, // /_a; }.vec2 rcp(
	0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // vec2 _a) { retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, // n vec2(1.0)/_a; 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, // }.vec3 rcp(vec3 
	0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _a) { return vec
	0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, // 3(1.0)/_a; }.vec
	0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, // 4 rcp(vec4 _a) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, //  return vec4(1.0
	0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, // )/_a; }.vec2 vec
	0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, // 2_splat(float _x
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // ) { return vec2(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // _x, _x); }.vec3 
	0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // vec3_splat(float
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, //  _x) { return ve
	0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, // c3(_x, _x, _x); 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, // }.vec4 vec4_spla
	0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // t(float _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // turn vec4(_x, _x
	0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, // , _x, _x); }.uve
	0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, // c2 uvec2_splat(u
	0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // int _x) { return
	0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, //  uvec2(_x, _x); 
	0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, // }.uvec3 uvec3_sp
	0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // lat(uint _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, // eturn uvec3(_x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, // _x, _x); }.uvec4
	0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, //  uvec4_splat(uin
	0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, // t _x) { return u
	0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // vec4(_x, _x, _x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, //  _x); }.mat4 mtx
	0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, // FromRows(vec4 _0
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // , vec4 _1, vec4 
	0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // _2, vec4 _3).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, // eturn transpose(
	0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, // mat4(_0, _1, _2,
	0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, //  _3) );.}.mat4 m
	0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, // txFromCols(vec4 
	0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, // _0, vec4 _1, vec
	0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, // 4 _2, vec4 _3).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, // .return mat4(_0,
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, //  _1, _2, _3);.}.
	0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, // mat3 mtxFromRows
	0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // (vec3 _0, vec3 _
	0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 1, vec3 _2).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, // turn transpose(m
	0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, // at3(_0, _1, _2) 
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, // );.}.mat3 mtxFro
	0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, // mCols(vec3 _0, v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, // ec3 _1, vec3 _2)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, // .{.return mat3(_
	0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, // 0, _1, _2);.}.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform vec4 u_vie
	0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // wRect;.uniform v
	0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, // ec4 u_viewTexel;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // view;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, // t4 u_invView;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, // iform mat4 u_pro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // u_invProj;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, // rm mat4 u_viewPr
	0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // oj;.uniform mat4
	0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, //  u_invViewProj;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, // uniform mat4 u_m
	0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // odel[32];.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, // m mat4 u_modelVi
	0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // ew;.uniform mat4
	0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, //  u_modelViewProj
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, // ;.uniform vec4 u
	0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, // _alphaRef4;.vec4
	0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x45, 0x38, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  encodeRE8(float
	0x20, 0x5f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x78, 0x70, //  _r).{.float exp
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x63, 0x65, 0x69, 0x6c, 0x28, 0x6c, 0x6f, 0x67, // onent = ceil(log
	0x32, 0x28, 0x5f, 0x72, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 2(_r) );.return 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x72, 0x20, 0x2f, 0x20, 0x65, 0x78, 0x70, 0x32, 0x28, 0x65, // vec4(_r / exp2(e
	0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x0a, 0x2c, // xponent)., 0.0.,
	0x20, 0x30, 0x2e, 0x30, 0x0a, 0x2c, 0x20, 0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, //  0.0., (exponent
	0x20, 0x2b, 0x20, 0x31, 0x32, 0x38, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x35, 0x2e, //  + 128.0) / 255.
	0x30, 0x0a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x65, 0x63, // 0.);.}.float dec
	0x6f, 0x64, 0x65, 0x52, 0x45, 0x38, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x65, 0x38, // odeRE8(vec4 _re8
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, // ).{.float expone
	0x6e, 0x74, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x65, 0x38, 0x2e, 0x77, 0x20, 0x2a, 0x20, 0x32, 0x35, // nt = _re8.w * 25
	0x35, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, 0x32, 0x38, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, // 5.0 - 128.0;.ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x72, 0x65, 0x38, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x65, 0x78, 0x70, // urn _re8.x * exp
	0x32, 0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // 2(exponent);.}.v
	0x65, 0x63, 0x34, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x47, 0x42, 0x45, 0x38, 0x28, // ec4 encodeRGBE8(
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, // vec3 _rgb).{.vec
	0x34, 0x20, 0x72, 0x67, 0x62, 0x65, 0x38, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, // 4 rgbe8;.float m
	0x61, 0x78, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x6d, 0x61, // axComponent = ma
	0x78, 0x28, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2e, 0x78, 0x2c, 0x20, 0x5f, 0x72, // x(max(_rgb.x, _r
	0x67, 0x62, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, // gb.y), _rgb.z);.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x3d, // float exponent =
	0x20, 0x63, 0x65, 0x69, 0x6c, 0x28, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x6d, 0x61, 0x78, 0x43, 0x6f, //  ceil(log2(maxCo
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x65, // mponent) );.rgbe
	0x38, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2f, 0x20, 0x65, // 8.xyz = _rgb / e
	0x78, 0x70, 0x32, 0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x29, 0x3b, 0x0a, 0x72, // xp2(exponent);.r
	0x67, 0x62, 0x65, 0x38, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, // gbe8.w = (expone
	0x6e, 0x74, 0x20, 0x2b, 0x20, 0x31, 0x32, 0x38, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x32, 0x35, // nt + 128.0) / 25
	0x35, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x65, // 5.0;.return rgbe
	0x38, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, // 8;.}.vec3 decode
	0x52, 0x47, 0x42, 0x45, 0x38, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x65, // RGBE8(vec4 _rgbe
	0x38, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x78, 0x70, 0x6f, 0x6e, // 8).{.float expon
	0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x65, 0x38, 0x2e, 0x77, 0x20, 0x2a, // ent = _rgbe8.w *
	0x20, 0x32, 0x35, 0x35, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, 0x32, 0x38, 0x2e, 0x30, 0x3b, 0x0a, //  255.0 - 128.0;.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x65, // vec3 rgb = _rgbe
	0x38, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x65, 0x78, 0x70, 0x32, 0x28, 0x65, 0x78, 0x70, // 8.xyz * exp2(exp
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, // onent);.return r
	0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, // gb;.}.vec3 encod
	0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x55, 0x69, 0x6e, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, // eNormalUint(vec3
	0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  _normal).{.retu
	0x72, 0x6e, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, // rn _normal * 0.5
	0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, //  + 0.5;.}.vec3 d
	0x65, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x55, 0x69, 0x6e, 0x74, 0x28, // ecodeNormalUint(
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, // vec3 _encodedNor
	0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x65, // mal).{.return _e
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x2a, 0x20, 0x32, // ncodedNormal * 2
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, // .0 - 1.0;.}.vec2
	0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x53, 0x70, 0x68, //  encodeNormalSph
	0x65, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x6e, 0x6f, 0x72, // ereMap(vec3 _nor
	0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6e, 0x6f, // mal).{.return no
	0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // rmalize(_normal.
	0x78, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // xy) * sqrt(_norm
	0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, // al.z * 0.5 + 0.5
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, // );.}.vec3 decode
	0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x28, // NormalSphereMap(
	0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, // vec2 _encodedNor
	0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x7a, 0x7a, 0x20, // mal).{.float zz 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, // = dot(_encodedNo
	0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, // rmal, _encodedNo
	0x72, 0x6d, 0x61, 0x6c, 0x29, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, 0x2e, // rmal) * 2.0 - 1.
	0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x6e, // 0;.return vec3(n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, // ormalize(_encode
	0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, // dNormal.xy) * sq
	0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x7a, 0x7a, 0x2a, 0x7a, 0x7a, 0x29, 0x2c, // rt(1.0 - zz*zz),
	0x20, 0x7a, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x6f, 0x63, 0x74, //  zz);.}.vec2 oct
	0x61, 0x68, 0x65, 0x64, 0x72, 0x6f, 0x6e, 0x57, 0x72, 0x61, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, // ahedronWrap(vec2
	0x20, 0x5f, 0x76, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _val).{.return 
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x76, 0x61, 0x6c, 0x2e, // (1.0 - abs(_val.
	0x79, 0x78, 0x29, 0x20, 0x29, 0x0a, 0x2a, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x76, 0x65, 0x63, 0x32, // yx) ).* mix(vec2
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x2d, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x76, 0x65, // _splat(-1.0), ve
	0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x76, // c2_splat(1.0), v
	0x65, 0x63, 0x32, 0x28, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x45, // ec2(greaterThanE
	0x71, 0x75, 0x61, 0x6c, 0x28, 0x5f, 0x76, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x76, 0x65, // qual(_val.xy, ve
	0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x29, 0x20, // c2_splat(0.0) ) 
	0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x65, 0x6e, 0x63, 0x6f, // ) );.}.vec2 enco
	0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x4f, 0x63, 0x74, 0x61, 0x68, 0x65, 0x64, 0x72, // deNormalOctahedr
	0x6f, 0x6e, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, // on(vec3 _normal)
	0x0a, 0x7b, 0x0a, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x2f, 0x3d, 0x20, 0x61, 0x62, // .{._normal /= ab
	0x73, 0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x61, // s(_normal.x) + a
	0x62, 0x73, 0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, // bs(_normal.y) + 
	0x61, 0x62, 0x73, 0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, // abs(_normal.z);.
	0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x20, 0x3d, 0x20, 0x5f, 0x6e, 0x6f, // _normal.xy = _no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x20, 0x3f, 0x20, // rmal.z >= 0.0 ? 
	0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x20, 0x3a, 0x20, 0x6f, 0x63, 0x74, // _normal.xy : oct
	0x61, 0x68, 0x65, 0x64, 0x72, 0x6f, 0x6e, 0x57, 0x72, 0x61, 0x70, 0x28, 0x5f, 0x6e, 0x6f, 0x72, // ahedronWrap(_nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x29, 0x3b, 0x0a, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // mal.xy);._normal
	0x2e, 0x78, 0x79, 0x20, 0x3d, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, // .xy = _normal.xy
	0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x72, 0x65, //  * 0.5 + 0.5;.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x3b, // turn _normal.xy;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, // .}.vec3 decodeNo
	0x72, 0x6d, 0x61, 0x6c, 0x4f, 0x63, 0x74, 0x61, 0x68, 0x65, 0x64, 0x72, 0x6f, 0x6e, 0x28, 0x76, // rmalOctahedron(v
	0x65, 0x63, 0x32, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, // ec2 _encodedNorm
	0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, // al).{._encodedNo
	0x72, 0x6d, 0x61, 0x6c, 0x20, 0x3d, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, // rmal = _encodedN
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, 0x2e, // ormal * 2.0 - 1.
	0x30, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, // 0;.vec3 normal;.
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, // normal.z = 1.0 -
	0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, //  abs(_encodedNor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x65, 0x6e, // mal.x) - abs(_en
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, // codedNormal.y);.
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // normal.xy = norm
	0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x20, 0x3f, 0x20, 0x5f, 0x65, // al.z >= 0.0 ? _e
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x20, // ncodedNormal.xy 
	0x3a, 0x20, 0x6f, 0x63, 0x74, 0x61, 0x68, 0x65, 0x64, 0x72, 0x6f, 0x6e, 0x57, 0x72, 0x61, 0x70, // : octahedronWrap
	0x28, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // (_encodedNormal.
	0x78, 0x79, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // xy);.return norm
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, // alize(normal);.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x47, 0x42, // .vec3 convertRGB
	0x32, 0x58, 0x59, 0x5a, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, // 2XYZ(vec3 _rgb).
	0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, // {.vec3 xyz;.xyz.
	0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x34, // x = dot(vec3(0.4
	0x31, 0x32, 0x34, 0x35, 0x36, 0x34, 0x2c, 0x20, 0x30, 0x2e, 0x33, 0x35, 0x37, 0x35, 0x37, 0x36, // 124564, 0.357576
	0x31, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x38, 0x30, 0x34, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, // 1, 0.1804375), _
	0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, // rgb);.xyz.y = do
	0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x32, 0x36, 0x37, 0x32, 0x39, // t(vec3(0.2126729
	0x2c, 0x20, 0x30, 0x2e, 0x37, 0x31, 0x35, 0x31, 0x35, 0x32, 0x32, 0x2c, 0x20, 0x30, 0x2e, 0x30, // , 0.7151522, 0.0
	0x37, 0x32, 0x31, 0x37, 0x35, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, // 721750), _rgb);.
	0x78, 0x79, 0x7a, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, // xyz.z = dot(vec3
	0x28, 0x30, 0x2e, 0x30, 0x31, 0x39, 0x33, 0x33, 0x33, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x31, // (0.0193339, 0.11
	0x39, 0x31, 0x39, 0x32, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x39, 0x35, 0x30, 0x33, 0x30, 0x34, 0x31, // 91920, 0.9503041
	0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ), _rgb);.return
	0x20, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, //  xyz;.}.vec3 con
	0x76, 0x65, 0x72, 0x74, 0x58, 0x59, 0x5a, 0x32, 0x52, 0x47, 0x42, 0x28, 0x76, 0x65, 0x63, 0x33, // vertXYZ2RGB(vec3
	0x20, 0x5f, 0x78, 0x79, 0x7a, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x67, //  _xyz).{.vec3 rg
	0x62, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, // b;.rgb.x = dot(v
	0x65, 0x63, 0x33, 0x28, 0x20, 0x33, 0x2e, 0x32, 0x34, 0x30, 0x34, 0x35, 0x34, 0x32, 0x2c, 0x20, // ec3( 3.2404542, 
	0x2d, 0x31, 0x2e, 0x35, 0x33, 0x37, 0x31, 0x33, 0x38, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x34, // -1.5371385, -0.4
	0x39, 0x38, 0x35, 0x33, 0x31, 0x34, 0x29, 0x2c, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, // 985314), _xyz);.
	0x72, 0x67, 0x62, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, // rgb.y = dot(vec3
	0x28, 0x2d, 0x30, 0x2e, 0x39, 0x36, 0x39, 0x32, 0x36, 0x36, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x38, // (-0.9692660, 1.8
	0x37, 0x36, 0x30, 0x31, 0x30, 0x38, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x31, 0x35, 0x35, 0x36, // 760108, 0.041556
	0x30, 0x29, 0x2c, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x7a, // 0), _xyz);.rgb.z
	0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x20, 0x30, 0x2e, 0x30, //  = dot(vec3( 0.0
	0x35, 0x35, 0x36, 0x34, 0x33, 0x34, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x32, 0x30, 0x34, 0x30, 0x32, // 556434, -0.20402
	0x35, 0x39, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x37, 0x32, 0x32, 0x35, 0x32, 0x29, 0x2c, 0x20, // 59, 1.0572252), 
	0x5f, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, // _xyz);.return rg
	0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, // b;.}.vec3 conver
	0x74, 0x58, 0x59, 0x5a, 0x32, 0x59, 0x78, 0x79, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x78, // tXYZ2Yxy(vec3 _x
	0x79, 0x7a, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x20, // yz).{.float inv 
	0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x78, 0x79, 0x7a, 0x2c, 0x20, // = 1.0/dot(_xyz, 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, // vec3(1.0, 1.0, 1
	0x2e, 0x30, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, // .0) );.return ve
	0x63, 0x33, 0x28, 0x5f, 0x78, 0x79, 0x7a, 0x2e, 0x79, 0x2c, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x2e, // c3(_xyz.y, _xyz.
	0x78, 0x2a, 0x69, 0x6e, 0x76, 0x2c, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x2e, 0x79, 0x2a, 0x69, 0x6e, // x*inv, _xyz.y*in
	0x76, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, // v);.}.vec3 conve
	0x72, 0x74, 0x59, 0x78, 0x79, 0x32, 0x58, 0x59, 0x5a, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // rtYxy2XYZ(vec3 _
	0x59, 0x78, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x78, 0x79, 0x7a, 0x3b, // Yxy).{.vec3 xyz;
	0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x78, 0x2a, // .xyz.x = _Yxy.x*
	0x5f, 0x59, 0x78, 0x79, 0x2e, 0x79, 0x2f, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x7a, 0x3b, 0x0a, 0x78, // _Yxy.y/_Yxy.z;.x
	0x79, 0x7a, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x78, 0x3b, 0x0a, 0x78, // yz.y = _Yxy.x;.x
	0x79, 0x7a, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x78, 0x2a, 0x28, 0x31, // yz.z = _Yxy.x*(1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x5f, 0x59, // .0 - _Yxy.y - _Y
	0x78, 0x79, 0x2e, 0x7a, 0x29, 0x2f, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x7a, 0x3b, 0x0a, 0x72, 0x65, // xy.z)/_Yxy.z;.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // turn xyz;.}.vec3
	0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x59, 0x78, 0x79, 0x28, //  convertRGB2Yxy(
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // vec3 _rgb).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x58, 0x59, 0x5a, 0x32, 0x59, // urn convertXYZ2Y
	0x78, 0x79, 0x28, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x58, 0x59, // xy(convertRGB2XY
	0x5a, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // Z(_rgb) );.}.vec
	0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x78, 0x79, 0x32, 0x52, 0x47, 0x42, // 3 convertYxy2RGB
	0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x59, 0x78, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // (vec3 _Yxy).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x58, 0x59, 0x5a, 0x32, // turn convertXYZ2
	0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x78, 0x79, 0x32, 0x58, // RGB(convertYxy2X
	0x59, 0x5a, 0x28, 0x5f, 0x59, 0x78, 0x79, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // YZ(_Yxy) );.}.ve
	0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x59, 0x75, // c3 convertRGB2Yu
	0x76, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, // v(vec3 _rgb).{.v
	0x65, 0x63, 0x33, 0x20, 0x79, 0x75, 0x76, 0x3b, 0x0a, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x20, 0x3d, // ec3 yuv;.yuv.x =
	0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, //  dot(_rgb, vec3(
	0x30, 0x2e, 0x32, 0x39, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x38, 0x37, 0x2c, 0x20, 0x30, 0x2e, // 0.299, 0.587, 0.
	0x31, 0x31, 0x34, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x79, 0x75, 0x76, 0x2e, 0x79, 0x20, 0x3d, 0x20, // 114) );.yuv.y = 
	0x28, 0x5f, 0x72, 0x67, 0x62, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x29, // (_rgb.x - yuv.x)
	0x2a, 0x30, 0x2e, 0x37, 0x31, 0x33, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x79, 0x75, // *0.713 + 0.5;.yu
	0x76, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2e, 0x7a, 0x20, 0x2d, 0x20, // v.z = (_rgb.z - 
	0x79, 0x75, 0x76, 0x2e, 0x78, 0x29, 0x2a, 0x30, 0x2e, 0x35, 0x36, 0x34, 0x20, 0x2b, 0x20, 0x30, // yuv.x)*0.564 + 0
	0x2e, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x79, 0x75, 0x76, 0x3b, 0x0a, // .5;.return yuv;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x75, // }.vec3 convertYu
	0x76, 0x32, 0x52, 0x47, 0x42, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x79, 0x75, 0x76, 0x29, // v2RGB(vec3 _yuv)
	0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x72, 0x67, 0x62, // .{.vec3 rgb;.rgb
	0x2e, 0x78, 0x20, 0x3d, 0x20, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x31, 0x2e, // .x = _yuv.x + 1.
	0x34, 0x30, 0x33, 0x2a, 0x28, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x79, 0x2d, 0x30, 0x2e, 0x35, 0x29, // 403*(_yuv.y-0.5)
	0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x78, // ;.rgb.y = _yuv.x
	0x20, 0x2d, 0x20, 0x30, 0x2e, 0x33, 0x34, 0x34, 0x2a, 0x28, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x79, //  - 0.344*(_yuv.y
	0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x37, 0x31, 0x34, 0x2a, 0x28, 0x5f, // -0.5) - 0.714*(_
	0x79, 0x75, 0x76, 0x2e, 0x7a, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, // yuv.z-0.5);.rgb.
	0x7a, 0x20, 0x3d, 0x20, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x37, // z = _yuv.x + 1.7
	0x37, 0x33, 0x2a, 0x28, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x7a, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x3b, // 73*(_yuv.z-0.5);
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // .return rgb;.}.v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x59, // ec3 convertRGB2Y
	0x49, 0x51, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, // IQ(vec3 _rgb).{.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x79, 0x69, 0x71, 0x3b, 0x0a, 0x79, 0x69, 0x71, 0x2e, 0x78, 0x20, // vec3 yiq;.yiq.x 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x39, 0x39, // = dot(vec3(0.299
	0x2c, 0x20, 0x30, 0x2e, 0x35, 0x38, 0x37, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x31, 0x34, 0x20, 0x29, // , 0.587, 0.114 )
	0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x79, 0x69, 0x71, 0x2e, 0x79, 0x20, 0x3d, // , _rgb);.yiq.y =
	0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x35, 0x39, 0x35, 0x37, //  dot(vec3(0.5957
	0x31, 0x36, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x32, 0x37, 0x34, 0x34, 0x35, 0x33, 0x2c, 0x20, 0x2d, // 16, -0.274453, -
	0x30, 0x2e, 0x33, 0x32, 0x31, 0x32, 0x36, 0x33, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, // 0.321263), _rgb)
	0x3b, 0x0a, 0x79, 0x69, 0x71, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, // ;.yiq.z = dot(ve
	0x63, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x34, 0x35, 0x36, 0x2c, 0x20, 0x2d, 0x30, 0x2e, // c3(0.211456, -0.
	0x35, 0x32, 0x32, 0x35, 0x39, 0x31, 0x2c, 0x20, 0x30, 0x2e, 0x33, 0x31, 0x31, 0x31, 0x33, 0x35, // 522591, 0.311135
	0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ), _rgb);.return
	0x20, 0x79, 0x69, 0x71, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, //  yiq;.}.vec3 con
	0x76, 0x65, 0x72, 0x74, 0x59, 0x49, 0x51, 0x32, 0x52, 0x47, 0x42, 0x28, 0x76, 0x65, 0x63, 0x33, // vertYIQ2RGB(vec3
	0x20, 0x5f, 0x79, 0x69, 0x71, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x67, //  _yiq).{.vec3 rg
	0x62, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, // b;.rgb.x = dot(v
	0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x39, 0x35, 0x36, 0x33, 0x2c, // ec3(1.0, 0.9563,
	0x20, 0x30, 0x2e, 0x36, 0x32, 0x31, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x79, 0x69, 0x71, 0x29, 0x3b, //  0.6210), _yiq);
	0x0a, 0x72, 0x67, 0x62, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, // .rgb.y = dot(vec
	0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x32, 0x37, 0x32, 0x31, 0x2c, 0x20, // 3(1.0, -0.2721, 
	0x2d, 0x30, 0x2e, 0x36, 0x34, 0x37, 0x34, 0x29, 0x2c, 0x20, 0x5f, 0x79, 0x69, 0x71, 0x29, 0x3b, // -0.6474), _yiq);
	0x0a, 0x72, 0x67, 0x62, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, // .rgb.z = dot(vec
	0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x31, 0x30, 0x37, 0x30, 0x2c, 0x20, // 3(1.0, -1.1070, 
	0x31, 0x2e, 0x37, 0x30, 0x34, 0x36, 0x29, 0x2c, 0x20, 0x5f, 0x79, 0x69, 0x71, 0x29, 0x3b, 0x0a, // 1.7046), _yiq);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // return rgb;.}.ve
	0x63, 0x33, 0x20, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x28, 0x76, 0x65, 0x63, 0x33, // c3 toLinear(vec3
	0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _rgb).{.return 
	0x70, 0x6f, 0x77, 0x28, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x2c, 0x20, 0x76, // pow(abs(_rgb), v
	0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x32, 0x2e, 0x32, 0x29, 0x20, 0x29, // ec3_splat(2.2) )
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x61, // ;.}.vec4 toLinea
	0x72, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, // r(vec4 _rgba).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x74, 0x6f, 0x4c, 0x69, // return vec4(toLi
	0x6e, 0x65, 0x61, 0x72, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, // near(_rgba.xyz),
	0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, //  _rgba.w);.}.vec
	0x33, 0x20, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, // 3 toLinearAccura
	0x74, 0x65, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, // te(vec3 _rgb).{.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x6f, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2f, // vec3 lo = _rgb /
	0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x68, 0x69, 0x20, //  12.92;.vec3 hi 
	0x3d, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x20, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x20, 0x30, // = pow( (_rgb + 0
	0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2f, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x2c, 0x20, 0x76, // .055) / 1.055, v
	0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x29, // ec3_splat(2.4) )
	0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, // ;.vec3 rgb = mix
	0x28, 0x68, 0x69, 0x2c, 0x20, 0x6c, 0x6f, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x6c, 0x65, // (hi, lo, vec3(le
	0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x5f, 0x72, 0x67, 0x62, // ssThanEqual(_rgb
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, // , vec3_splat(0.0
	0x34, 0x30, 0x34, 0x35, 0x29, 0x20, 0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // 4045) ) ) );.ret
	0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // urn rgb;.}.vec4 
	0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x74, 0x65, // toLinearAccurate
	0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // (vec4 _rgba).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x74, 0x6f, 0x4c, 0x69, 0x6e, // eturn vec4(toLin
	0x65, 0x61, 0x72, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x74, 0x65, 0x28, 0x5f, 0x72, 0x67, 0x62, // earAccurate(_rgb
	0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, // a.xyz), _rgba.w)
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, // ;.}.float toGamm
	0x61, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // a(float _r).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x72, 0x29, // turn pow(abs(_r)
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // , 1.0/2.2);.}.ve
	0x63, 0x33, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, // c3 toGamma(vec3 
	0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, // _rgb).{.return p
	0x6f, 0x77, 0x28, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x2c, 0x20, 0x76, 0x65, // ow(abs(_rgb), ve
	0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, // c3_splat(1.0/2.2
	0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6f, 0x47, 0x61, // ) );.}.vec4 toGa
	0x6d, 0x6d, 0x61, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, // mma(vec4 _rgba).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x74, 0x6f, // {.return vec4(to
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, // Gamma(_rgba.xyz)
	0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // , _rgba.w);.}.ve
	0x63, 0x33, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, // c3 toGammaAccura
	0x74, 0x65, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, // te(vec3 _rgb).{.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x6f, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2a, // vec3 lo = _rgb *
	0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x68, 0x69, 0x20, //  12.92;.vec3 hi 
	0x3d, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x2c, // = pow(abs(_rgb),
	0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x2f, //  vec3_splat(1.0/
	0x32, 0x2e, 0x34, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2d, // 2.4) ) * 1.055 -
	0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x67, 0x62, //  0.055;.vec3 rgb
	0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x68, 0x69, 0x2c, 0x20, 0x6c, 0x6f, 0x2c, 0x20, 0x76, //  = mix(hi, lo, v
	0x65, 0x63, 0x33, 0x28, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, // ec3(lessThanEqua
	0x6c, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, // l(_rgb, vec3_spl
	0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x20, 0x29, 0x20, // at(0.0031308) ) 
	0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, // ) );.return rgb;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x41, // .}.vec4 toGammaA
	0x63, 0x63, 0x75, 0x72, 0x61, 0x74, 0x65, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, // ccurate(vec4 _rg
	0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // ba).{.return vec
	0x34, 0x28, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x74, // 4(toGammaAccurat
	0x65, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, // e(_rgba.xyz), _r
	0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, // gba.w);.}.vec3 t
	0x6f, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // oReinhard(vec3 _
	0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x6f, // rgb).{.return to
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2f, 0x28, 0x5f, 0x72, 0x67, 0x62, // Gamma(_rgb/(_rgb
	0x2b, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x29, // +vec3_splat(1.0)
	0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6f, 0x52, //  ) );.}.vec4 toR
	0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, // einhard(vec4 _rg
	0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // ba).{.return vec
	0x34, 0x28, 0x74, 0x6f, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x28, 0x5f, 0x72, 0x67, // 4(toReinhard(_rg
	0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, // ba.xyz), _rgba.w
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x6d, // );.}.vec3 toFilm
	0x69, 0x63, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, // ic(vec3 _rgb).{.
	0x5f, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x76, 0x65, 0x63, 0x33, 0x5f, // _rgb = max(vec3_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, // splat(0.0), _rgb
	0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x34, 0x29, 0x3b, 0x0a, 0x5f, 0x72, 0x67, 0x62, 0x20, //  - 0.004);._rgb 
	0x3d, 0x20, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2a, 0x28, 0x36, 0x2e, 0x32, 0x2a, 0x5f, 0x72, 0x67, // = (_rgb*(6.2*_rg
	0x62, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x72, // b + 0.5) ) / (_r
	0x67, 0x62, 0x2a, 0x28, 0x36, 0x2e, 0x32, 0x2a, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x20, 0x31, // gb*(6.2*_rgb + 1
	0x2e, 0x37, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x30, 0x36, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // .7) + 0.06);.ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // urn _rgb;.}.vec4
	0x20, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, //  toFilmic(vec4 _
	0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // rgba).{.return v
	0x65, 0x63, 0x34, 0x28, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x5f, 0x72, 0x67, // ec4(toFilmic(_rg
	0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, // ba.xyz), _rgba.w
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6f, 0x41, 0x63, 0x65, 0x73, // );.}.vec3 toAces
	0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, // Filmic(vec3 _rgb
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x61, 0x20, 0x3d, 0x20, 0x32, // ).{.float aa = 2
	0x2e, 0x35, 0x31, 0x66, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x62, 0x20, 0x3d, // .51f;.float bb =
	0x20, 0x30, 0x2e, 0x30, 0x33, 0x66, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x63, //  0.03f;.float cc
	0x20, 0x3d, 0x20, 0x32, 0x2e, 0x34, 0x33, 0x66, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //  = 2.43f;.float 
	0x64, 0x64, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x39, 0x66, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // dd = 0.59f;.floa
	0x74, 0x20, 0x65, 0x65, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x31, 0x34, 0x66, 0x3b, 0x0a, 0x72, 0x65, // t ee = 0.14f;.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x28, 0x5f, 0x72, 0x67, 0x62, // turn clamp((_rgb
	0x2a, 0x28, 0x61, 0x61, 0x2a, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x20, 0x62, 0x62, 0x29, 0x20, // *(aa*_rgb + bb) 
	0x29, 0x2f, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2a, 0x28, 0x63, 0x63, 0x2a, 0x5f, 0x72, 0x67, 0x62, // )/(_rgb*(cc*_rgb
	0x20, 0x2b, 0x20, 0x64, 0x64, 0x29, 0x20, 0x2b, 0x20, 0x65, 0x65, 0x29, 0x20, 0x2c, 0x20, 0x30, //  + dd) + ee) , 0
	0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // .0, 1.0);.}.vec4
	0x20, 0x74, 0x6f, 0x41, 0x63, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x76, 0x65, //  toAcesFilmic(ve
	0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // c4 _rgba).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x74, 0x6f, 0x41, 0x63, 0x65, 0x73, 0x46, 0x69, // rn vec4(toAcesFi
	0x6c, 0x6d, 0x69, 0x63, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, // lmic(_rgba.xyz),
	0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, //  _rgba.w);.}.vec
	0x33, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, // 3 luma(vec3 _rgb
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x79, 0x20, 0x3d, 0x20, 0x64, // ).{.float yy = d
	0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x32, 0x36, 0x37, 0x32, // ot(vec3(0.212672
	0x39, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x31, 0x35, 0x31, 0x35, 0x32, 0x32, 0x2c, 0x20, 0x30, 0x2e, // 9, 0.7151522, 0.
	0x30, 0x37, 0x32, 0x31, 0x37, 0x35, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, // 0721750), _rgb);
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, // .return vec3_spl
	0x61, 0x74, 0x28, 0x79, 0x79, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x6c, // at(yy);.}.vec4 l
	0x75, 0x6d, 0x61, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, // uma(vec4 _rgba).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x6c, 0x75, // {.return vec4(lu
	0x6d, 0x61, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, // ma(_rgba.xyz), _
	0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // rgba.w);.}.vec3 
	0x63, 0x6f, 0x6e, 0x53, 0x61, 0x74, 0x42, 0x72, 0x69, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // conSatBri(vec3 _
	0x72, 0x67, 0x62, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x63, 0x73, 0x62, 0x29, 0x0a, // rgb, vec3 _csb).
	0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, // {.vec3 rgb = _rg
	0x62, 0x20, 0x2a, 0x20, 0x5f, 0x63, 0x73, 0x62, 0x2e, 0x7a, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x20, // b * _csb.z;.rgb 
	0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6c, 0x75, 0x6d, 0x61, 0x28, 0x72, 0x67, 0x62, 0x29, 0x2c, // = mix(luma(rgb),
	0x20, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x5f, 0x63, 0x73, 0x62, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x72, //  rgb, _csb.y);.r
	0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, // gb = mix(vec3_sp
	0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x2c, 0x20, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x5f, // lat(0.5), rgb, _
	0x63, 0x73, 0x62, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, // csb.x);.return r
	0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x6f, 0x6e, 0x53, 0x61, // gb;.}.vec4 conSa
	0x74, 0x42, 0x72, 0x69, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2c, // tBri(vec4 _rgba,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x63, 0x73, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, //  vec3 _csb).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x63, 0x6f, 0x6e, 0x53, 0x61, 0x74, // turn vec4(conSat
	0x42, 0x72, 0x69, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, // Bri(_rgba.xyz, _
	0x63, 0x73, 0x62, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, // csb), _rgba.w);.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x69, 0x7a, 0x65, // }.vec3 posterize
	0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // (vec3 _rgb, floa
	0x74, 0x20, 0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x29, 0x0a, 0x7b, 0x0a, // t _numColors).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x72, 0x67, // return floor(_rg
	0x62, 0x2a, 0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x29, 0x20, 0x2f, 0x20, // b*_numColors) / 
	0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // _numColors;.}.ve
	0x63, 0x34, 0x20, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x69, 0x7a, 0x65, 0x28, 0x76, 0x65, 0x63, // c4 posterize(vec
	0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // 4 _rgba, float _
	0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // numColors).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x69, // urn vec4(posteri
	0x7a, 0x65, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x6e, // ze(_rgba.xyz, _n
	0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, // umColors), _rgba
	0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x65, 0x70, 0x69, // .w);.}.vec3 sepi
	0x61, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, // a(vec3 _rgb).{.v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // ec3 color;.color
	0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x76, // .x = dot(_rgb, v
	0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x33, 0x39, 0x33, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x36, 0x39, // ec3(0.393, 0.769
	0x2c, 0x20, 0x30, 0x2e, 0x31, 0x38, 0x39, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, // , 0.189) );.colo
	0x72, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, // r.y = dot(_rgb, 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x33, 0x34, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x36, 0x38, // vec3(0.349, 0.68
	0x36, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x36, 0x38, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, // 6, 0.168) );.col
	0x6f, 0x72, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2c, // or.z = dot(_rgb,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x37, 0x32, 0x2c, 0x20, 0x30, 0x2e, 0x35, //  vec3(0.272, 0.5
	0x33, 0x34, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x33, 0x31, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, // 34, 0.131) );.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // turn color;.}.ve
	0x63, 0x34, 0x20, 0x73, 0x65, 0x70, 0x69, 0x61, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, // c4 sepia(vec4 _r
	0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, // gba).{.return ve
	0x63, 0x34, 0x28, 0x73, 0x65, 0x70, 0x69, 0x61, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, // c4(sepia(_rgba.x
	0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, // yz), _rgba.w);.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x6c, // .vec3 blendOverl
	0x61, 0x79, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, // ay(vec3 _base, v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, // ec3 _blend).{.ve
	0x63, 0x33, 0x20, 0x6c, 0x74, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x5f, 0x62, // c3 lt = 2.0 * _b
	0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x5f, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x3b, 0x0a, 0x76, 0x65, // ase * _blend;.ve
	0x63, 0x33, 0x20, 0x67, 0x74, 0x65, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x32, // c3 gte = 1.0 - 2
	0x2e, 0x30, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x62, 0x61, 0x73, // .0 * (1.0 - _bas
	0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x62, 0x6c, 0x65, // e) * (1.0 - _ble
	0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, // nd);.return mix(
	0x6c, 0x74, 0x2c, 0x20, 0x67, 0x74, 0x65, 0x2c, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x76, 0x65, // lt, gte, step(ve
	0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x2c, 0x20, 0x5f, // c3_splat(0.5), _
	0x62, 0x61, 0x73, 0x65, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // base) );.}.vec4 
	0x62, 0x6c, 0x65, 0x6e, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x28, 0x76, 0x65, 0x63, // blendOverlay(vec
	0x34, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x62, // 4 _base, vec4 _b
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // lend).{.return v
	0x65, 0x63, 0x34, 0x28, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, // ec4(blendOverlay
	0x28, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x62, 0x6c, 0x65, // (_base.xyz, _ble
	0x6e, 0x64, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x77, // nd.xyz), _base.w
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, // );.}.vec3 adjust
	0x48, 0x75, 0x65, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x66, // Hue(vec3 _rgb, f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x68, 0x75, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, // loat _hue).{.vec
	0x33, 0x20, 0x79, 0x69, 0x71, 0x20, 0x3d, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, // 3 yiq = convertR
	0x47, 0x42, 0x32, 0x59, 0x49, 0x51, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x66, 0x6c, // GB2YIQ(_rgb);.fl
	0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x5f, 0x68, 0x75, 0x65, // oat angle = _hue
	0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x28, 0x79, 0x69, 0x71, 0x2e, 0x7a, 0x2c, 0x20, 0x79, //  + atan(yiq.z, y
	0x69, 0x71, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x65, 0x6e, // iq.y);.float len
	0x20, 0x3d, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x28, 0x79, 0x69, 0x71, 0x2e, 0x79, 0x7a, //  = length(yiq.yz
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, // );.return conver
	0x74, 0x59, 0x49, 0x51, 0x32, 0x52, 0x47, 0x42, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x79, 0x69, // tYIQ2RGB(vec3(yi
	0x71, 0x2e, 0x78, 0x2c, 0x20, 0x6c, 0x65, 0x6e, 0x2a, 0x63, 0x6f, 0x73, 0x28, 0x61, 0x6e, 0x67, // q.x, len*cos(ang
	0x6c, 0x65, 0x29, 0x2c, 0x20, 0x6c, 0x65, 0x6e, 0x2a, 0x73, 0x69, 0x6e, 0x28, 0x61, 0x6e, 0x67, // le), len*sin(ang
	0x6c, 0x65, 0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // le) ) );.}.vec4 
	0x70, 0x61, 0x63, 0x6b, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x54, 0x6f, 0x52, 0x67, 0x62, 0x61, 0x28, // packFloatToRgba(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x29, 0x0a, 0x7b, 0x0a, // float _value).{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, // const vec4 shift
	0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x32, 0x35, 0x36, 0x20, 0x2a, 0x20, 0x32, 0x35, //  = vec4(256 * 25
	0x36, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, 0x2c, 0x20, 0x32, 0x35, 0x36, 0x20, 0x2a, 0x20, 0x32, // 6 * 256, 256 * 2
	0x35, 0x36, 0x2c, 0x20, 0x32, 0x35, 0x36, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x63, // 56, 256, 1.0);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x6d, 0x61, 0x73, 0x6b, 0x20, 0x3d, // onst vec4 mask =
	0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, //  vec4(0, 1.0 / 2
	0x35, 0x36, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x36, 0x2e, // 56.0, 1.0 / 256.
	0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x29, 0x3b, // 0, 1.0 / 256.0);
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, // .vec4 comp = fra
	0x63, 0x74, 0x28, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x2a, 0x20, 0x73, 0x68, 0x69, 0x66, // ct(_value * shif
	0x74, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x20, 0x2d, 0x3d, 0x20, 0x63, 0x6f, 0x6d, 0x70, // t);.comp -= comp
	0x2e, 0x78, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x6d, 0x61, 0x73, 0x6b, 0x3b, 0x0a, 0x72, 0x65, // .xxyz * mask;.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // turn comp;.}.flo
	0x61, 0x74, 0x20, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x52, 0x67, 0x62, 0x61, 0x54, 0x6f, 0x46, // at unpackRgbaToF
	0x6c, 0x6f, 0x61, 0x74, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, // loat(vec4 _rgba)
	0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x73, 0x68, // .{.const vec4 sh
	0x69, 0x66, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2f, // ift = vec4(1.0 /
	0x20, 0x28, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x20, //  (256.0 * 256.0 
	0x2a, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, // * 256.0), 1.0 / 
	0x28, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x29, 0x2c, // (256.0 * 256.0),
	0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, //  1.0 / 256.0, 1.
	0x30, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, // 0);.return dot(_
	0x72, 0x67, 0x62, 0x61, 0x2c, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // rgba, shift);.}.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x48, 0x61, 0x6c, 0x66, 0x46, 0x6c, 0x6f, // vec2 packHalfFlo
	0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x29, // at(float _value)
	0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x68, // .{.const vec2 sh
	0x69, 0x66, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x32, 0x35, 0x36, 0x2c, 0x20, // ift = vec2(256, 
	0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, // 1.0);.const vec2
	0x20, 0x6d, 0x61, 0x73, 0x6b, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2c, 0x20, //  mask = vec2(0, 
	0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, // 1.0 / 256.0);.ve
	0x63, 0x32, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, // c2 comp = fract(
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x2a, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x29, 0x3b, // _value * shift);
	0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x20, 0x2d, 0x3d, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x2e, 0x78, 0x78, // .comp -= comp.xx
	0x20, 0x2a, 0x20, 0x6d, 0x61, 0x73, 0x6b, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  * mask;.return 
	0x63, 0x6f, 0x6d, 0x70, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x75, 0x6e, // comp;.}.float un
	0x70, 0x61, 0x63, 0x6b, 0x48, 0x61, 0x6c, 0x66, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x76, 0x65, // packHalfFloat(ve
	0x63, 0x32, 0x20, 0x5f, 0x72, 0x67, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // c2 _rg).{.const 
	0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, // vec2 shift = vec
	0x32, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x2c, 0x20, 0x31, // 2(1.0 / 256.0, 1
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x64, 0x6f, 0x74, 0x28, // .0);.return dot(
	0x5f, 0x72, 0x67, 0x2c, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // _rg, shift);.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x28, 0x76, 0x65, 0x63, 0x32, // loat random(vec2
	0x20, 0x5f, 0x75, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, //  _uv).{.return f
	0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x75, 0x76, // ract(sin(dot(_uv
	0x2e, 0x78, 0x79, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x32, 0x2e, 0x39, 0x38, 0x39, // .xy, vec2(12.989
	0x38, 0x2c, 0x20, 0x37, 0x38, 0x2e, 0x32, 0x33, 0x33, 0x29, 0x20, 0x29, 0x20, 0x29, 0x20, 0x2a, // 8, 78.233) ) ) *
	0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x35, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, //  43758.5453);.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x66, 0x69, 0x78, 0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x6f, 0x6b, // vec3 fixCubeLook
	0x75, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // up(vec3 _v, floa
	0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x74, // t _lod, float _t
	0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x75, 0x62, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x29, // opLevelCubeSize)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, // .{.float ax = ab
	0x73, 0x28, 0x5f, 0x76, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, // s(_v.x);.float a
	0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x76, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, // y = abs(_v.y);.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x7a, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x76, // loat az = abs(_v
	0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x6d, 0x61, 0x78, 0x20, // .z);.float vmax 
	0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x61, 0x78, 0x28, 0x61, 0x78, 0x2c, 0x20, 0x61, 0x79, // = max(max(ax, ay
	0x29, 0x2c, 0x20, 0x61, 0x7a, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x63, // ), az);.float sc
	0x61, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x65, 0x78, 0x70, 0x32, // ale = 1.0 - exp2
	0x28, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x76, // (_lod) / _topLev
	0x65, 0x6c, 0x43, 0x75, 0x62, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, // elCubeSize;.if (
	0x61, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x76, 0x6d, 0x61, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x5f, 0x76, // ax != vmax) { _v
	0x2e, 0x78, 0x20, 0x2a, 0x3d, 0x20, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x3b, 0x20, 0x7d, 0x0a, 0x69, // .x *= scale; }.i
	0x66, 0x20, 0x28, 0x61, 0x79, 0x20, 0x21, 0x3d, 0x20, 0x76, 0x6d, 0x61, 0x78, 0x29, 0x20, 0x7b, // f (ay != vmax) {
	0x20, 0x5f, 0x76, 0x2e, 0x79, 0x20, 0x2a, 0x3d, 0x20, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x3b, 0x20, //  _v.y *= scale; 
	0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x61, 0x7a, 0x20, 0x21, 0x3d, 0x20, 0x76, 0x6d, 0x61, 0x78, // }.if (az != vmax
	0x29, 0x20, 0x7b, 0x20, 0x5f, 0x76, 0x2e, 0x7a, 0x20, 0x2a, 0x3d, 0x20, 0x73, 0x63, 0x61, 0x6c, // ) { _v.z *= scal
	0x65, 0x3b, 0x20, 0x7d, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x76, 0x3b, 0x0a, // e; }.return _v;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // }.vec2 texture2D
	0x42, 0x63, 0x35, 0x28, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, // Bc5(sampler2D _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x75, 0x76, // ampler, vec2 _uv
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // ).{.return textu
	0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x75, 0x76, // re(_sampler, _uv
	0x29, 0x2e, 0x78, 0x79, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, 0x66, // ).xy;.}.mat3 cof
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x29, 0x0a, 0x7b, // actor(mat4 _m).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x0a, 0x5f, 0x6d, // .return mat3(._m
	0x5b, 0x31, 0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x32, 0x5d, 0x2d, // [1][1]*_m[2][2]-
	0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x31, // _m[1][2]*_m[2][1
	0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, // ],._m[1][2]*_m[2
	0x5d, 0x5b, 0x30, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, // ][0]-_m[1][0]*_m
	0x5b, 0x32, 0x5d, 0x5b, 0x32, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x30, 0x5d, // [2][2],._m[1][0]
	0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x31, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, // *_m[2][1]-_m[1][
	0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x30, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, // 1]*_m[2][0],._m[
	0x30, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x31, 0x5d, 0x2d, 0x5f, // 0][2]*_m[2][1]-_
	0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x32, 0x5d, // m[0][1]*_m[2][2]
	0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, // ,._m[0][0]*_m[2]
	0x5b, 0x32, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, // [2]-_m[0][2]*_m[
	0x32, 0x5d, 0x5b, 0x30, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x31, 0x5d, 0x2a, // 2][0],._m[0][1]*
	0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x30, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x30, // _m[2][0]-_m[0][0
	0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x31, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, // ]*_m[2][1],._m[0
	0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x32, 0x5d, 0x2d, 0x5f, 0x6d, // ][1]*_m[1][2]-_m
	0x5b, 0x30, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x31, 0x5d, 0x2c, // [0][2]*_m[1][1],
	0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, // ._m[0][2]*_m[1][
	0x30, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x31, // 0]-_m[0][0]*_m[1
	0x5d, 0x5b, 0x32, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, // ][2],._m[0][0]*_
	0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x31, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x31, 0x5d, // m[1][1]-_m[0][1]
	0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x30, 0x5d, 0x0a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // *_m[1][0].);.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6f, 0x43, 0x6c, 0x69, 0x70, 0x53, 0x70, 0x61, 0x63, 0x65, // loat toClipSpace
	0x44, 0x65, 0x70, 0x74, 0x68, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x64, 0x65, 0x70, // Depth(float _dep
	0x74, 0x68, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5a, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // thTextureZ).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x54, 0x65, 0x78, 0x74, 0x75, // turn _depthTextu
	0x72, 0x65, 0x5a, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x3b, // reZ * 2.0 - 1.0;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6c, 0x69, 0x70, 0x54, 0x6f, 0x57, 0x6f, // .}.vec3 clipToWo
	0x72, 0x6c, 0x64, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, // rld(mat4 _invVie
	0x77, 0x50, 0x72, 0x6f, 0x6a, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x63, 0x6c, 0x69, // wProj, vec3 _cli
	0x70, 0x50, 0x6f, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x77, 0x70, 0x6f, // pPos).{.vec4 wpo
	0x73, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, // s = ( (_invViewP
	0x72, 0x6f, 0x6a, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x63, 0x6c, // roj) * (vec4(_cl
	0x69, 0x70, 0x50, 0x6f, 0x73, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, // ipPos, 1.0) ) );
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x77, 0x70, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, // .return wpos.xyz
	0x20, 0x2f, 0x20, 0x77, 0x70, 0x6f, 0x73, 0x2e, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, //  / wpos.w;.}.voi
	0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, // d main().{.gl_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // agColor = v_colo
	0x72, 0x30, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,                                                       // r0;.}..
};
