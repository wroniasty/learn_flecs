static const uint8_t vs_standard[10395] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0xa4, 0x8b, 0xef, 0x49, 0x00, 0x00, 0x88, 0x28, // VSH........I...(
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x33, 0x30, 0x0a, 0x23, // ..#version 430.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, //           textur
	0x65, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // e.#define textur
	0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, // e2DLod       tex
	0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // tureLod.#define 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, // texture2DGrad   
	0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, //    textureGrad.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x50, 0x72, 0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // ProjLod   textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, // eProjLod.#define
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, //  texture2DProjGr
	0x61, 0x64, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, // ad  textureProjG
	0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, // rad.#define text
	0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, // ureCubeLod     t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, // extureLod.#defin
	0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, // e textureCubeGra
	0x64, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, // d    textureGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x33, 0x44, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // 3D          text
	0x75, 0x72, 0x65, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, // ure.#define text
	0x75, 0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, // ure2DLodOffset t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, // extureLodOffset.
	0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, // #define attribut
	0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, // e in.#define var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x75, 0x74, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, // ying out.#define
	0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, //  bgfxShadow2D(_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, // ampler, _coord) 
	0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, //     vec4_splat(t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // exture(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, //  _coord) ).#defi
	0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, // ne bgfxShadow2DP
	0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, // roj(_sampler, _c
	0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // oord) vec4_splat
	0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, // (textureProj(_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, // mpler, _coord) )
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // .attribute vec4 
	0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x3b, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // a_color0;.attrib
	0x75, 0x74, 0x65, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // ute vec3 a_posit
	0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, // ion;.varying vec
	0x34, 0x20, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, // 4 v_color0;.vec3
	0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, //  instMul(vec3 _v
	0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, // ec, mat3 _mtx) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, //  return ( (_vec)
	0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, //  * (_mtx) ); }.v
	0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, // ec3 instMul(mat3
	0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, //  _mtx, vec3 _vec
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, // ) { return ( (_m
	0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, // tx) * (_vec) ); 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, // }.vec4 instMul(v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, // ec4 _vec, mat4 _
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, // mtx) { return ( 
	0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // (_vec) * (_mtx) 
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, // ); }.vec4 instMu
	0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, // l(mat4 _mtx, vec
	0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 4 _vec) { return
	0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, //  ( (_mtx) * (_ve
	0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, // c) ); }.float rc
	0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // p(float _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // turn 1.0/_a; }.v
	0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, // ec2 rcp(vec2 _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, //  { return vec2(1
	0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, // .0)/_a; }.vec3 r
	0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // cp(vec3 _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, // turn vec3(1.0)/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, // a; }.vec4 rcp(ve
	0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c4 _a) { return 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, // vec4(1.0)/_a; }.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // vec2 vec2_splat(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // float _x) { retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // rn vec2(_x, _x);
	0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, //  }.vec3 vec3_spl
	0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // at(float _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // eturn vec3(_x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, // x, _x); }.vec4 v
	0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ec4_splat(float 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _x) { return vec
	0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // 4(_x, _x, _x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, // ); }.uvec2 uvec2
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // _splat(uint _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, // { return uvec2(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, // x, _x); }.uvec3 
	0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec3_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // ec3(_x, _x, _x);
	0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, //  }.uvec4 uvec4_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // plat(uint _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, // return uvec4(_x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, //  _x, _x, _x); }.
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, // mat4 mtxFromRows
	0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // (vec4 _0, vec4 _
	0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // 1, vec4 _2, vec4
	0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, //  _3).{.return tr
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, // anspose(mat4(_0,
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, //  _1, _2, _3) );.
	0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, // }.mat4 mtxFromCo
	0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // ls(vec4 _0, vec4
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, //  _1, vec4 _2, ve
	0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c4 _3).{.return 
	0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, // mat4(_0, _1, _2,
	0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, //  _3);.}.mat3 mtx
	0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, // FromRows(vec3 _0
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // , vec3 _1, vec3 
	0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, // _2).{.return tra
	0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, // nspose(mat3(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, // _1, _2) );.}.mat
	0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, // 3 mtxFromCols(ve
	0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, // c3 _0, vec3 _1, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // vec3 _2).{.retur
	0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, // n mat3(_0, _1, _
	0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // 2);.}.uniform ve
	0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, // c4 u_viewRect;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, // niform vec4 u_vi
	0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // ewTexel;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, //  mat4 u_view;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, // iform mat4 u_inv
	0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // View;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // t4 u_proj;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, // rm mat4 u_invPro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // u_viewProj;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, // orm mat4 u_invVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // ewProj;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, // mat4 u_model[32]
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // _modelView;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, // orm mat4 u_model
	0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // ViewProj;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, // m vec4 u_alphaRe
	0x66, 0x34, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x52, // f4;.vec4 encodeR
	0x45, 0x38, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, // E8(float _r).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, // loat exponent = 
	0x63, 0x65, 0x69, 0x6c, 0x28, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x5f, 0x72, 0x29, 0x20, 0x29, 0x3b, // ceil(log2(_r) );
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x72, 0x20, // .return vec4(_r 
	0x2f, 0x20, 0x65, 0x78, 0x70, 0x32, 0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x29, // / exp2(exponent)
	0x0a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x0a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x0a, 0x2c, 0x20, 0x28, // ., 0.0., 0.0., (
	0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x2b, 0x20, 0x31, 0x32, 0x38, 0x2e, 0x30, // exponent + 128.0
	0x29, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x35, 0x2e, 0x30, 0x0a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // ) / 255.0.);.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x45, 0x38, 0x28, 0x76, // loat decodeRE8(v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x65, 0x38, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // ec4 _re8).{.floa
	0x74, 0x20, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x65, // t exponent = _re
	0x38, 0x2e, 0x77, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x35, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, 0x32, // 8.w * 255.0 - 12
	0x38, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x72, 0x65, 0x38, // 8.0;.return _re8
	0x2e, 0x78, 0x20, 0x2a, 0x20, 0x65, 0x78, 0x70, 0x32, 0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, // .x * exp2(expone
	0x6e, 0x74, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x65, 0x6e, 0x63, 0x6f, // nt);.}.vec4 enco
	0x64, 0x65, 0x52, 0x47, 0x42, 0x45, 0x38, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, // deRGBE8(vec3 _rg
	0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x67, 0x62, 0x65, 0x38, 0x3b, // b).{.vec4 rgbe8;
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, // .float maxCompon
	0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x72, // ent = max(max(_r
	0x67, 0x62, 0x2e, 0x78, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x5f, // gb.x, _rgb.y), _
	0x72, 0x67, 0x62, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x78, // rgb.z);.float ex
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x63, 0x65, 0x69, 0x6c, 0x28, 0x6c, 0x6f, // ponent = ceil(lo
	0x67, 0x32, 0x28, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x29, // g2(maxComponent)
	0x20, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x65, 0x38, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, //  );.rgbe8.xyz = 
	0x5f, 0x72, 0x67, 0x62, 0x20, 0x2f, 0x20, 0x65, 0x78, 0x70, 0x32, 0x28, 0x65, 0x78, 0x70, 0x6f, // _rgb / exp2(expo
	0x6e, 0x65, 0x6e, 0x74, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x65, 0x38, 0x2e, 0x77, 0x20, 0x3d, // nent);.rgbe8.w =
	0x20, 0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x2b, 0x20, 0x31, 0x32, 0x38, //  (exponent + 128
	0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x35, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, // .0) / 255.0;.ret
	0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x65, 0x38, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // urn rgbe8;.}.vec
	0x33, 0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x47, 0x42, 0x45, 0x38, 0x28, 0x76, 0x65, // 3 decodeRGBE8(ve
	0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x65, 0x38, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // c4 _rgbe8).{.flo
	0x61, 0x74, 0x20, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x5f, 0x72, // at exponent = _r
	0x67, 0x62, 0x65, 0x38, 0x2e, 0x77, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x35, 0x2e, 0x30, 0x20, 0x2d, // gbe8.w * 255.0 -
	0x20, 0x31, 0x32, 0x38, 0x2e, 0x30, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x67, 0x62, //  128.0;.vec3 rgb
	0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x65, 0x38, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, //  = _rgbe8.xyz * 
	0x65, 0x78, 0x70, 0x32, 0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x29, 0x3b, 0x0a, // exp2(exponent);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // return rgb;.}.ve
	0x63, 0x33, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x55, // c3 encodeNormalU
	0x69, 0x6e, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // int(vec3 _normal
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // ).{.return _norm
	0x61, 0x6c, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x3b, 0x0a, // al * 0.5 + 0.5;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, // }.vec3 decodeNor
	0x6d, 0x61, 0x6c, 0x55, 0x69, 0x6e, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x65, 0x6e, // malUint(vec3 _en
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // codedNormal).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, // eturn _encodedNo
	0x72, 0x6d, 0x61, 0x6c, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, // rmal * 2.0 - 1.0
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x4e, // ;.}.vec2 encodeN
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x76, // ormalSphereMap(v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // ec3 _normal).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // eturn normalize(
	0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, // _normal.xy) * sq
	0x72, 0x74, 0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x30, // rt(_normal.z * 0
	0x2e, 0x35, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // .5 + 0.5);.}.vec
	0x33, 0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x53, 0x70, // 3 decodeNormalSp
	0x68, 0x65, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x65, 0x6e, // hereMap(vec2 _en
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x66, // codedNormal).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x7a, 0x7a, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x65, // loat zz = dot(_e
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x5f, 0x65, // ncodedNormal, _e
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x20, 0x2a, 0x20, // ncodedNormal) * 
	0x32, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // 2.0 - 1.0;.retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, // n vec3(normalize
	0x28, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // (_encodedNormal.
	0x78, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // xy) * sqrt(1.0 -
	0x20, 0x7a, 0x7a, 0x2a, 0x7a, 0x7a, 0x29, 0x2c, 0x20, 0x7a, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, //  zz*zz), zz);.}.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x6f, 0x63, 0x74, 0x61, 0x68, 0x65, 0x64, 0x72, 0x6f, 0x6e, 0x57, // vec2 octahedronW
	0x72, 0x61, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x76, 0x61, 0x6c, 0x29, 0x0a, 0x7b, // rap(vec2 _val).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x61, // .return (1.0 - a
	0x62, 0x73, 0x28, 0x5f, 0x76, 0x61, 0x6c, 0x2e, 0x79, 0x78, 0x29, 0x20, 0x29, 0x0a, 0x2a, 0x20, // bs(_val.yx) ).* 
	0x6d, 0x69, 0x78, 0x28, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x2d, // mix(vec2_splat(-
	0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // 1.0), vec2_splat
	0x28, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x67, 0x72, 0x65, 0x61, // (1.0), vec2(grea
	0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x5f, 0x76, 0x61, // terThanEqual(_va
	0x6c, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // l.xy, vec2_splat
	0x28, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // (0.0) ) ) );.}.v
	0x65, 0x63, 0x32, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // ec2 encodeNormal
	0x4f, 0x63, 0x74, 0x61, 0x68, 0x65, 0x64, 0x72, 0x6f, 0x6e, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, // Octahedron(vec3 
	0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // _normal).{._norm
	0x61, 0x6c, 0x20, 0x2f, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // al /= abs(_norma
	0x6c, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // l.x) + abs(_norm
	0x61, 0x6c, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x6e, 0x6f, 0x72, // al.y) + abs(_nor
	0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // mal.z);._normal.
	0x78, 0x79, 0x20, 0x3d, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x3e, // xy = _normal.z >
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x20, 0x3f, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // = 0.0 ? _normal.
	0x78, 0x79, 0x20, 0x3a, 0x20, 0x6f, 0x63, 0x74, 0x61, 0x68, 0x65, 0x64, 0x72, 0x6f, 0x6e, 0x57, // xy : octahedronW
	0x72, 0x61, 0x70, 0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x29, 0x3b, // rap(_normal.xy);
	0x0a, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x20, 0x3d, 0x20, 0x5f, 0x6e, // ._normal.xy = _n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2b, // ormal.xy * 0.5 +
	0x20, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x6e, 0x6f, //  0.5;.return _no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // rmal.xy;.}.vec3 
	0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x4f, 0x63, 0x74, 0x61, // decodeNormalOcta
	0x68, 0x65, 0x64, 0x72, 0x6f, 0x6e, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x65, 0x6e, 0x63, // hedron(vec2 _enc
	0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x5f, 0x65, // odedNormal).{._e
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x3d, 0x20, 0x5f, // ncodedNormal = _
	0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x2a, 0x20, // encodedNormal * 
	0x32, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // 2.0 - 1.0;.vec3 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, // normal;.normal.z
	0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x65, 0x6e, //  = 1.0 - abs(_en
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x20, 0x2d, // codedNormal.x) -
	0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, //  abs(_encodedNor
	0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // mal.y);.normal.x
	0x79, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x3e, 0x3d, 0x20, // y = normal.z >= 
	0x30, 0x2e, 0x30, 0x20, 0x3f, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, // 0.0 ? _encodedNo
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x20, 0x3a, 0x20, 0x6f, 0x63, 0x74, 0x61, 0x68, 0x65, // rmal.xy : octahe
	0x64, 0x72, 0x6f, 0x6e, 0x57, 0x72, 0x61, 0x70, 0x28, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, // dronWrap(_encode
	0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // dNormal.xy);.ret
	0x75, 0x72, 0x6e, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x6e, 0x6f, // urn normalize(no
	0x72, 0x6d, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, // rmal);.}.vec3 co
	0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x58, 0x59, 0x5a, 0x28, 0x76, 0x65, 0x63, // nvertRGB2XYZ(vec
	0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x78, // 3 _rgb).{.vec3 x
	0x79, 0x7a, 0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // yz;.xyz.x = dot(
	0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x34, 0x31, 0x32, 0x34, 0x35, 0x36, 0x34, 0x2c, 0x20, // vec3(0.4124564, 
	0x30, 0x2e, 0x33, 0x35, 0x37, 0x35, 0x37, 0x36, 0x31, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x38, 0x30, // 0.3575761, 0.180
	0x34, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x78, 0x79, // 4375), _rgb);.xy
	0x7a, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, // z.y = dot(vec3(0
	0x2e, 0x32, 0x31, 0x32, 0x36, 0x37, 0x32, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x31, 0x35, 0x31, // .2126729, 0.7151
	0x35, 0x32, 0x32, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x37, 0x32, 0x31, 0x37, 0x35, 0x30, 0x29, 0x2c, // 522, 0.0721750),
	0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x7a, 0x20, 0x3d, 0x20, //  _rgb);.xyz.z = 
	0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x31, 0x39, 0x33, 0x33, // dot(vec3(0.01933
	0x33, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x31, 0x39, 0x31, 0x39, 0x32, 0x30, 0x2c, 0x20, 0x30, // 39, 0.1191920, 0
	0x2e, 0x39, 0x35, 0x30, 0x33, 0x30, 0x34, 0x31, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, // .9503041), _rgb)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x7d, 0x0a, // ;.return xyz;.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x58, 0x59, 0x5a, 0x32, // vec3 convertXYZ2
	0x52, 0x47, 0x42, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x29, 0x0a, 0x7b, // RGB(vec3 _xyz).{
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x78, // .vec3 rgb;.rgb.x
	0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x20, 0x33, 0x2e, 0x32, //  = dot(vec3( 3.2
	0x34, 0x30, 0x34, 0x35, 0x34, 0x32, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x33, 0x37, 0x31, 0x33, // 404542, -1.53713
	0x38, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x34, 0x39, 0x38, 0x35, 0x33, 0x31, 0x34, 0x29, 0x2c, // 85, -0.4985314),
	0x20, 0x5f, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x79, 0x20, 0x3d, 0x20, //  _xyz);.rgb.y = 
	0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x2d, 0x30, 0x2e, 0x39, 0x36, 0x39, 0x32, // dot(vec3(-0.9692
	0x36, 0x36, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x38, 0x37, 0x36, 0x30, 0x31, 0x30, 0x38, 0x2c, 0x20, // 660, 1.8760108, 
	0x30, 0x2e, 0x30, 0x34, 0x31, 0x35, 0x35, 0x36, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x78, 0x79, 0x7a, // 0.0415560), _xyz
	0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, // );.rgb.z = dot(v
	0x65, 0x63, 0x33, 0x28, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x36, 0x34, 0x33, 0x34, 0x2c, 0x20, // ec3( 0.0556434, 
	0x2d, 0x30, 0x2e, 0x32, 0x30, 0x34, 0x30, 0x32, 0x35, 0x39, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x35, // -0.2040259, 1.05
	0x37, 0x32, 0x32, 0x35, 0x32, 0x29, 0x2c, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x72, // 72252), _xyz);.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // eturn rgb;.}.vec
	0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x58, 0x59, 0x5a, 0x32, 0x59, 0x78, 0x79, // 3 convertXYZ2Yxy
	0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, // (vec3 _xyz).{.fl
	0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x64, 0x6f, // oat inv = 1.0/do
	0x74, 0x28, 0x5f, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, // t(_xyz, vec3(1.0
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, // , 1.0, 1.0) );.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x79, 0x7a, 0x2e, // eturn vec3(_xyz.
	0x79, 0x2c, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x2e, 0x78, 0x2a, 0x69, 0x6e, 0x76, 0x2c, 0x20, 0x5f, // y, _xyz.x*inv, _
	0x78, 0x79, 0x7a, 0x2e, 0x79, 0x2a, 0x69, 0x6e, 0x76, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // xyz.y*inv);.}.ve
	0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x78, 0x79, 0x32, 0x58, 0x59, // c3 convertYxy2XY
	0x5a, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x59, 0x78, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x76, // Z(vec3 _Yxy).{.v
	0x65, 0x63, 0x33, 0x20, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x78, 0x20, 0x3d, // ec3 xyz;.xyz.x =
	0x20, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x78, 0x2a, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x79, 0x2f, 0x5f, //  _Yxy.x*_Yxy.y/_
	0x59, 0x78, 0x79, 0x2e, 0x7a, 0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x5f, // Yxy.z;.xyz.y = _
	0x59, 0x78, 0x79, 0x2e, 0x78, 0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x5f, // Yxy.x;.xyz.z = _
	0x59, 0x78, 0x79, 0x2e, 0x78, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x59, 0x78, // Yxy.x*(1.0 - _Yx
	0x79, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x7a, 0x29, 0x2f, 0x5f, 0x59, // y.y - _Yxy.z)/_Y
	0x78, 0x79, 0x2e, 0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x78, 0x79, 0x7a, // xy.z;.return xyz
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, // ;.}.vec3 convert
	0x52, 0x47, 0x42, 0x32, 0x59, 0x78, 0x79, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, // RGB2Yxy(vec3 _rg
	0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6e, 0x76, // b).{.return conv
	0x65, 0x72, 0x74, 0x58, 0x59, 0x5a, 0x32, 0x59, 0x78, 0x79, 0x28, 0x63, 0x6f, 0x6e, 0x76, 0x65, // ertXYZ2Yxy(conve
	0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x58, 0x59, 0x5a, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x20, // rtRGB2XYZ(_rgb) 
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, // );.}.vec3 conver
	0x74, 0x59, 0x78, 0x79, 0x32, 0x52, 0x47, 0x42, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x59, // tYxy2RGB(vec3 _Y
	0x78, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6e, // xy).{.return con
	0x76, 0x65, 0x72, 0x74, 0x58, 0x59, 0x5a, 0x32, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6e, 0x76, // vertXYZ2RGB(conv
	0x65, 0x72, 0x74, 0x59, 0x78, 0x79, 0x32, 0x58, 0x59, 0x5a, 0x28, 0x5f, 0x59, 0x78, 0x79, 0x29, // ertYxy2XYZ(_Yxy)
	0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, //  );.}.vec3 conve
	0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x59, 0x75, 0x76, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // rtRGB2Yuv(vec3 _
	0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x79, 0x75, 0x76, 0x3b, // rgb).{.vec3 yuv;
	0x0a, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, // .yuv.x = dot(_rg
	0x62, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x39, 0x39, 0x2c, 0x20, 0x30, // b, vec3(0.299, 0
	0x2e, 0x35, 0x38, 0x37, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x31, 0x34, 0x29, 0x20, 0x29, 0x3b, 0x0a, // .587, 0.114) );.
	0x79, 0x75, 0x76, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2e, 0x78, 0x20, // yuv.y = (_rgb.x 
	0x2d, 0x20, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x29, 0x2a, 0x30, 0x2e, 0x37, 0x31, 0x33, 0x20, 0x2b, // - yuv.x)*0.713 +
	0x20, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x79, 0x75, 0x76, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x28, 0x5f, //  0.5;.yuv.z = (_
	0x72, 0x67, 0x62, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x29, 0x2a, 0x30, // rgb.z - yuv.x)*0
	0x2e, 0x35, 0x36, 0x34, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // .564 + 0.5;.retu
	0x72, 0x6e, 0x20, 0x79, 0x75, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // rn yuv;.}.vec3 c
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x75, 0x76, 0x32, 0x52, 0x47, 0x42, 0x28, 0x76, 0x65, // onvertYuv2RGB(ve
	0x63, 0x33, 0x20, 0x5f, 0x79, 0x75, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // c3 _yuv).{.vec3 
	0x72, 0x67, 0x62, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x5f, 0x79, 0x75, // rgb;.rgb.x = _yu
	0x76, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x34, 0x30, 0x33, 0x2a, 0x28, 0x5f, 0x79, 0x75, // v.x + 1.403*(_yu
	0x76, 0x2e, 0x79, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x79, 0x20, // v.y-0.5);.rgb.y 
	0x3d, 0x20, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x33, 0x34, 0x34, // = _yuv.x - 0.344
	0x2a, 0x28, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x79, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2d, 0x20, // *(_yuv.y-0.5) - 
	0x30, 0x2e, 0x37, 0x31, 0x34, 0x2a, 0x28, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x7a, 0x2d, 0x30, 0x2e, // 0.714*(_yuv.z-0.
	0x35, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x5f, 0x79, 0x75, 0x76, // 5);.rgb.z = _yuv
	0x2e, 0x78, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x37, 0x37, 0x33, 0x2a, 0x28, 0x5f, 0x79, 0x75, 0x76, // .x + 1.773*(_yuv
	0x2e, 0x7a, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // .z-0.5);.return 
	0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, // rgb;.}.vec3 conv
	0x65, 0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x59, 0x49, 0x51, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, // ertRGB2YIQ(vec3 
	0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x79, 0x69, 0x71, // _rgb).{.vec3 yiq
	0x3b, 0x0a, 0x79, 0x69, 0x71, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, // ;.yiq.x = dot(ve
	0x63, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x39, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x38, 0x37, 0x2c, // c3(0.299, 0.587,
	0x20, 0x30, 0x2e, 0x31, 0x31, 0x34, 0x20, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, //  0.114 ), _rgb);
	0x0a, 0x79, 0x69, 0x71, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, // .yiq.y = dot(vec
	0x33, 0x28, 0x30, 0x2e, 0x35, 0x39, 0x35, 0x37, 0x31, 0x36, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x32, // 3(0.595716, -0.2
	0x37, 0x34, 0x34, 0x35, 0x33, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x33, 0x32, 0x31, 0x32, 0x36, 0x33, // 74453, -0.321263
	0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x79, 0x69, 0x71, 0x2e, 0x7a, 0x20, // ), _rgb);.yiq.z 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, // = dot(vec3(0.211
	0x34, 0x35, 0x36, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x32, 0x32, 0x35, 0x39, 0x31, 0x2c, 0x20, // 456, -0.522591, 
	0x30, 0x2e, 0x33, 0x31, 0x31, 0x31, 0x33, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, // 0.311135), _rgb)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x79, 0x69, 0x71, 0x3b, 0x0a, 0x7d, 0x0a, // ;.return yiq;.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x49, 0x51, 0x32, // vec3 convertYIQ2
	0x52, 0x47, 0x42, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x79, 0x69, 0x71, 0x29, 0x0a, 0x7b, // RGB(vec3 _yiq).{
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x78, // .vec3 rgb;.rgb.x
	0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, //  = dot(vec3(1.0,
	0x20, 0x30, 0x2e, 0x39, 0x35, 0x36, 0x33, 0x2c, 0x20, 0x30, 0x2e, 0x36, 0x32, 0x31, 0x30, 0x29, //  0.9563, 0.6210)
	0x2c, 0x20, 0x5f, 0x79, 0x69, 0x71, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x79, 0x20, 0x3d, // , _yiq);.rgb.y =
	0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x2d, //  dot(vec3(1.0, -
	0x30, 0x2e, 0x32, 0x37, 0x32, 0x31, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x36, 0x34, 0x37, 0x34, 0x29, // 0.2721, -0.6474)
	0x2c, 0x20, 0x5f, 0x79, 0x69, 0x71, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x7a, 0x20, 0x3d, // , _yiq);.rgb.z =
	0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x2d, //  dot(vec3(1.0, -
	0x31, 0x2e, 0x31, 0x30, 0x37, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x37, 0x30, 0x34, 0x36, 0x29, 0x2c, // 1.1070, 1.7046),
	0x20, 0x5f, 0x79, 0x69, 0x71, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, //  _yiq);.return r
	0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6f, 0x4c, 0x69, 0x6e, // gb;.}.vec3 toLin
	0x65, 0x61, 0x72, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, // ear(vec3 _rgb).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x61, 0x62, 0x73, 0x28, // .return pow(abs(
	0x5f, 0x72, 0x67, 0x62, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, // _rgb), vec3_spla
	0x74, 0x28, 0x32, 0x2e, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // t(2.2) );.}.vec4
	0x20, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, //  toLinear(vec4 _
	0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // rgba).{.return v
	0x65, 0x63, 0x34, 0x28, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x28, 0x5f, 0x72, 0x67, // ec4(toLinear(_rg
	0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, // ba.xyz), _rgba.w
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, // );.}.vec3 toLine
	0x61, 0x72, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x74, 0x65, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, // arAccurate(vec3 
	0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x6f, 0x20, // _rgb).{.vec3 lo 
	0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2f, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x3b, 0x0a, // = _rgb / 12.92;.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x20, 0x28, // vec3 hi = pow( (
	0x5f, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2f, 0x20, // _rgb + 0.055) / 
	0x31, 0x2e, 0x30, 0x35, 0x35, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, // 1.055, vec3_spla
	0x74, 0x28, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, // t(2.4) );.vec3 r
	0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x68, 0x69, 0x2c, 0x20, 0x6c, 0x6f, 0x2c, // gb = mix(hi, lo,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, //  vec3(lessThanEq
	0x75, 0x61, 0x6c, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, // ual(_rgb, vec3_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x20, 0x29, 0x20, // plat(0.04045) ) 
	0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, // ) );.return rgb;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, // .}.vec4 toLinear
	0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x74, 0x65, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, // Accurate(vec4 _r
	0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, // gba).{.return ve
	0x63, 0x34, 0x28, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x41, 0x63, 0x63, 0x75, 0x72, // c4(toLinearAccur
	0x61, 0x74, 0x65, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, // ate(_rgba.xyz), 
	0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // _rgba.w);.}.floa
	0x74, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // t toGamma(float 
	0x5f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, // _r).{.return pow
	0x28, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x72, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, // (abs(_r), 1.0/2.
	0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, // 2);.}.vec3 toGam
	0x6d, 0x61, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, // ma(vec3 _rgb).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x61, 0x62, 0x73, 0x28, 0x5f, // return pow(abs(_
	0x72, 0x67, 0x62, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // rgb), vec3_splat
	0x28, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // (1.0/2.2) );.}.v
	0x65, 0x63, 0x34, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x76, 0x65, 0x63, 0x34, // ec4 toGamma(vec4
	0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  _rgba).{.return
	0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x5f, 0x72, //  vec4(toGamma(_r
	0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, // gba.xyz), _rgba.
	0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, // w);.}.vec3 toGam
	0x6d, 0x61, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x74, 0x65, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, // maAccurate(vec3 
	0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x6f, 0x20, // _rgb).{.vec3 lo 
	0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2a, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x3b, 0x0a, // = _rgb * 12.92;.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x61, 0x62, // vec3 hi = pow(ab
	0x73, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, // s(_rgb), vec3_sp
	0x6c, 0x61, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x29, 0x20, 0x2a, // lat(1.0/2.4) ) *
	0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, //  1.055 - 0.055;.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x68, // vec3 rgb = mix(h
	0x69, 0x2c, 0x20, 0x6c, 0x6f, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x6c, 0x65, 0x73, 0x73, // i, lo, vec3(less
	0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, // ThanEqual(_rgb, 
	0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x30, 0x33, // vec3_splat(0.003
	0x31, 0x33, 0x30, 0x38, 0x29, 0x20, 0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // 1308) ) ) );.ret
	0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // urn rgb;.}.vec4 
	0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x74, 0x65, 0x28, // toGammaAccurate(
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // vec4 _rgba).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, // turn vec4(toGamm
	0x61, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x74, 0x65, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, // aAccurate(_rgba.
	0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, // xyz), _rgba.w);.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6f, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, // }.vec3 toReinhar
	0x64, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // d(vec3 _rgb).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x5f, 0x72, // eturn toGamma(_r
	0x67, 0x62, 0x2f, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2b, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, // gb/(_rgb+vec3_sp
	0x6c, 0x61, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // lat(1.0) ) );.}.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6f, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x28, // vec4 toReinhard(
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // vec4 _rgba).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x74, 0x6f, 0x52, 0x65, 0x69, 0x6e, // turn vec4(toRein
	0x68, 0x61, 0x72, 0x64, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, // hard(_rgba.xyz),
	0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, //  _rgba.w);.}.vec
	0x33, 0x20, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, // 3 toFilmic(vec3 
	0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, // _rgb).{._rgb = m
	0x61, 0x78, 0x28, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, // ax(vec3_splat(0.
	0x30, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x34, // 0), _rgb - 0.004
	0x29, 0x3b, 0x0a, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2a, // );._rgb = (_rgb*
	0x28, 0x36, 0x2e, 0x32, 0x2a, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x29, // (6.2*_rgb + 0.5)
	0x20, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2a, 0x28, 0x36, 0x2e, 0x32, 0x2a, //  ) / (_rgb*(6.2*
	0x5f, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x37, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, // _rgb + 1.7) + 0.
	0x30, 0x36, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x72, 0x67, 0x62, // 06);.return _rgb
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x6d, 0x69, // ;.}.vec4 toFilmi
	0x63, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, // c(vec4 _rgba).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x74, 0x6f, 0x46, 0x69, // return vec4(toFi
	0x6c, 0x6d, 0x69, 0x63, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, // lmic(_rgba.xyz),
	0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, //  _rgba.w);.}.vec
	0x33, 0x20, 0x74, 0x6f, 0x41, 0x63, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x76, // 3 toAcesFilmic(v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // ec3 _rgb).{.floa
	0x74, 0x20, 0x61, 0x61, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x35, 0x31, 0x66, 0x3b, 0x0a, 0x66, 0x6c, // t aa = 2.51f;.fl
	0x6f, 0x61, 0x74, 0x20, 0x62, 0x62, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x33, 0x66, 0x3b, 0x0a, // oat bb = 0.03f;.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x63, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x34, 0x33, 0x66, // float cc = 2.43f
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x64, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, // ;.float dd = 0.5
	0x39, 0x66, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x65, 0x20, 0x3d, 0x20, 0x30, // 9f;.float ee = 0
	0x2e, 0x31, 0x34, 0x66, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6c, 0x61, // .14f;.return cla
	0x6d, 0x70, 0x28, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2a, 0x28, 0x61, 0x61, 0x2a, 0x5f, 0x72, 0x67, // mp((_rgb*(aa*_rg
	0x62, 0x20, 0x2b, 0x20, 0x62, 0x62, 0x29, 0x20, 0x29, 0x2f, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2a, // b + bb) )/(_rgb*
	0x28, 0x63, 0x63, 0x2a, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x20, 0x64, 0x64, 0x29, 0x20, 0x2b, // (cc*_rgb + dd) +
	0x20, 0x65, 0x65, 0x29, 0x20, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, //  ee) , 0.0, 1.0)
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6f, 0x41, 0x63, 0x65, 0x73, 0x46, // ;.}.vec4 toAcesF
	0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, // ilmic(vec4 _rgba
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // ).{.return vec4(
	0x74, 0x6f, 0x41, 0x63, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x5f, 0x72, 0x67, // toAcesFilmic(_rg
	0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, // ba.xyz), _rgba.w
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x28, 0x76, // );.}.vec3 luma(v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // ec3 _rgb).{.floa
	0x74, 0x20, 0x79, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, // t yy = dot(vec3(
	0x30, 0x2e, 0x32, 0x31, 0x32, 0x36, 0x37, 0x32, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x31, 0x35, // 0.2126729, 0.715
	0x31, 0x35, 0x32, 0x32, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x37, 0x32, 0x31, 0x37, 0x35, 0x30, 0x29, // 1522, 0.0721750)
	0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // , _rgb);.return 
	0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x79, 0x79, 0x29, 0x3b, 0x0a, // vec3_splat(yy);.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x28, 0x76, 0x65, 0x63, 0x34, // }.vec4 luma(vec4
	0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  _rgba).{.return
	0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x6c, 0x75, 0x6d, 0x61, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, //  vec4(luma(_rgba
	0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, // .xyz), _rgba.w);
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x53, 0x61, 0x74, 0x42, 0x72, // .}.vec3 conSatBr
	0x69, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x76, 0x65, 0x63, // i(vec3 _rgb, vec
	0x33, 0x20, 0x5f, 0x63, 0x73, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, // 3 _csb).{.vec3 r
	0x67, 0x62, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2a, 0x20, 0x5f, 0x63, 0x73, 0x62, // gb = _rgb * _csb
	0x2e, 0x7a, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6c, 0x75, // .z;.rgb = mix(lu
	0x6d, 0x61, 0x28, 0x72, 0x67, 0x62, 0x29, 0x2c, 0x20, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x5f, 0x63, // ma(rgb), rgb, _c
	0x73, 0x62, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, // sb.y);.rgb = mix
	0x28, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x35, 0x29, // (vec3_splat(0.5)
	0x2c, 0x20, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x5f, 0x63, 0x73, 0x62, 0x2e, 0x78, 0x29, 0x3b, 0x0a, // , rgb, _csb.x);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // return rgb;.}.ve
	0x63, 0x34, 0x20, 0x63, 0x6f, 0x6e, 0x53, 0x61, 0x74, 0x42, 0x72, 0x69, 0x28, 0x76, 0x65, 0x63, // c4 conSatBri(vec
	0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x63, // 4 _rgba, vec3 _c
	0x73, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // sb).{.return vec
	0x34, 0x28, 0x63, 0x6f, 0x6e, 0x53, 0x61, 0x74, 0x42, 0x72, 0x69, 0x28, 0x5f, 0x72, 0x67, 0x62, // 4(conSatBri(_rgb
	0x61, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x63, 0x73, 0x62, 0x29, 0x2c, 0x20, 0x5f, 0x72, // a.xyz, _csb), _r
	0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, // gba.w);.}.vec3 p
	0x6f, 0x73, 0x74, 0x65, 0x72, 0x69, 0x7a, 0x65, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, // osterize(vec3 _r
	0x67, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, // gb, float _numCo
	0x6c, 0x6f, 0x72, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, // lors).{.return f
	0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2a, 0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, // loor(_rgb*_numCo
	0x6c, 0x6f, 0x72, 0x73, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6f, // lors) / _numColo
	0x72, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x6f, 0x73, 0x74, 0x65, // rs;.}.vec4 poste
	0x72, 0x69, 0x7a, 0x65, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2c, // rize(vec4 _rgba,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6f, 0x72, //  float _numColor
	0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, // s).{.return vec4
	0x28, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, // (posterize(_rgba
	0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, // .xyz, _numColors
	0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // ), _rgba.w);.}.v
	0x65, 0x63, 0x33, 0x20, 0x73, 0x65, 0x70, 0x69, 0x61, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // ec3 sepia(vec3 _
	0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // rgb).{.vec3 colo
	0x72, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // r;.color.x = dot
	0x28, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x33, 0x39, // (_rgb, vec3(0.39
	0x33, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x36, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x38, 0x39, 0x29, // 3, 0.769, 0.189)
	0x20, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, //  );.color.y = do
	0x74, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x33, // t(_rgb, vec3(0.3
	0x34, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x36, 0x38, 0x36, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x36, 0x38, // 49, 0.686, 0.168
	0x29, 0x20, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x64, // ) );.color.z = d
	0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, // ot(_rgb, vec3(0.
	0x32, 0x37, 0x32, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x33, 0x34, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x33, // 272, 0.534, 0.13
	0x31, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, // 1) );.return col
	0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x73, 0x65, 0x70, 0x69, 0x61, // or;.}.vec4 sepia
	0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // (vec4 _rgba).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x73, 0x65, 0x70, 0x69, 0x61, // eturn vec4(sepia
	0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, // (_rgba.xyz), _rg
	0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x6c, // ba.w);.}.vec3 bl
	0x65, 0x6e, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, // endOverlay(vec3 
	0x5f, 0x62, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x62, 0x6c, 0x65, // _base, vec3 _ble
	0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x74, 0x20, 0x3d, 0x20, // nd).{.vec3 lt = 
	0x32, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x5f, 0x62, // 2.0 * _base * _b
	0x6c, 0x65, 0x6e, 0x64, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x74, 0x65, 0x20, 0x3d, // lend;.vec3 gte =
	0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, //  1.0 - 2.0 * (1.
	0x30, 0x20, 0x2d, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // 0 - _base) * (1.
	0x30, 0x20, 0x2d, 0x20, 0x5f, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // 0 - _blend);.ret
	0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6c, 0x74, 0x2c, 0x20, 0x67, 0x74, 0x65, 0x2c, // urn mix(lt, gte,
	0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, //  step(vec3_splat
	0x28, 0x30, 0x2e, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x29, 0x20, 0x29, 0x3b, // (0.5), _base) );
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x4f, 0x76, 0x65, // .}.vec4 blendOve
	0x72, 0x6c, 0x61, 0x79, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2c, // rlay(vec4 _base,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, //  vec4 _blend).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x6c, 0x65, 0x6e, // return vec4(blen
	0x64, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x28, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x78, // dOverlay(_base.x
	0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, // yz, _blend.xyz),
	0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, //  _base.w);.}.vec
	0x33, 0x20, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x48, 0x75, 0x65, 0x28, 0x76, 0x65, 0x63, 0x33, // 3 adjustHue(vec3
	0x20, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x68, 0x75, //  _rgb, float _hu
	0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x79, 0x69, 0x71, 0x20, 0x3d, 0x20, // e).{.vec3 yiq = 
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x59, 0x49, 0x51, 0x28, 0x5f, // convertRGB2YIQ(_
	0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, // rgb);.float angl
	0x65, 0x20, 0x3d, 0x20, 0x5f, 0x68, 0x75, 0x65, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x28, // e = _hue + atan(
	0x79, 0x69, 0x71, 0x2e, 0x7a, 0x2c, 0x20, 0x79, 0x69, 0x71, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, // yiq.z, yiq.y);.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x65, 0x6e, 0x20, 0x3d, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, // loat len = lengt
	0x68, 0x28, 0x79, 0x69, 0x71, 0x2e, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // h(yiq.yz);.retur
	0x6e, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x49, 0x51, 0x32, 0x52, 0x47, 0x42, // n convertYIQ2RGB
	0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x79, 0x69, 0x71, 0x2e, 0x78, 0x2c, 0x20, 0x6c, 0x65, 0x6e, // (vec3(yiq.x, len
	0x2a, 0x63, 0x6f, 0x73, 0x28, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x29, 0x2c, 0x20, 0x6c, 0x65, 0x6e, // *cos(angle), len
	0x2a, 0x73, 0x69, 0x6e, 0x28, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, // *sin(angle) ) );
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x46, 0x6c, 0x6f, 0x61, // .}.vec4 packFloa
	0x74, 0x54, 0x6f, 0x52, 0x67, 0x62, 0x61, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x76, // tToRgba(float _v
	0x61, 0x6c, 0x75, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // alue).{.const ve
	0x63, 0x34, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // c4 shift = vec4(
	0x32, 0x35, 0x36, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, 0x2c, // 256 * 256 * 256,
	0x20, 0x32, 0x35, 0x36, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, 0x2c, 0x20, 0x32, 0x35, 0x36, 0x2c, //  256 * 256, 256,
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, //  1.0);.const vec
	0x34, 0x20, 0x6d, 0x61, 0x73, 0x6b, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2c, // 4 mask = vec4(0,
	0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, //  1.0 / 256.0, 1.
	0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, // 0 / 256.0, 1.0 /
	0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x6f, //  256.0);.vec4 co
	0x6d, 0x70, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x5f, 0x76, 0x61, 0x6c, 0x75, // mp = fract(_valu
	0x65, 0x20, 0x2a, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6d, 0x70, // e * shift);.comp
	0x20, 0x2d, 0x3d, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x2e, 0x78, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, //  -= comp.xxyz * 
	0x6d, 0x61, 0x73, 0x6b, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6d, // mask;.return com
	0x70, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x75, 0x6e, 0x70, 0x61, 0x63, // p;.}.float unpac
	0x6b, 0x52, 0x67, 0x62, 0x61, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x76, 0x65, 0x63, // kRgbaToFloat(vec
	0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // 4 _rgba).{.const
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, //  vec4 shift = ve
	0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x28, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x20, // c4(1.0 / (256.0 
	0x2a, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x29, // * 256.0 * 256.0)
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x28, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x20, 0x2a, // , 1.0 / (256.0 *
	0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, //  256.0), 1.0 / 2
	0x35, 0x36, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 56.0, 1.0);.retu
	0x72, 0x6e, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2c, 0x20, 0x73, 0x68, // rn dot(_rgba, sh
	0x69, 0x66, 0x74, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x70, 0x61, 0x63, // ift);.}.vec2 pac
	0x6b, 0x48, 0x61, 0x6c, 0x66, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // kHalfFloat(float
	0x20, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, //  _value).{.const
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, //  vec2 shift = ve
	0x63, 0x32, 0x28, 0x32, 0x35, 0x36, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x63, 0x6f, // c2(256, 1.0);.co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x6d, 0x61, 0x73, 0x6b, 0x20, 0x3d, 0x20, // nst vec2 mask = 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, // vec2(0, 1.0 / 25
	0x36, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x20, // 6.0);.vec2 comp 
	0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x2a, // = fract(_value *
	0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x20, 0x2d, 0x3d, //  shift);.comp -=
	0x20, 0x63, 0x6f, 0x6d, 0x70, 0x2e, 0x78, 0x78, 0x20, 0x2a, 0x20, 0x6d, 0x61, 0x73, 0x6b, 0x3b, //  comp.xx * mask;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x3b, 0x0a, 0x7d, 0x0a, // .return comp;.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x48, 0x61, 0x6c, 0x66, // float unpackHalf
	0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x72, 0x67, 0x29, 0x0a, // Float(vec2 _rg).
	0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x68, 0x69, // {.const vec2 shi
	0x66, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, // ft = vec2(1.0 / 
	0x32, 0x35, 0x36, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // 256.0, 1.0);.ret
	0x75, 0x72, 0x6e, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, 0x2c, 0x20, 0x73, 0x68, 0x69, // urn dot(_rg, shi
	0x66, 0x74, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x61, 0x6e, // ft);.}.float ran
	0x64, 0x6f, 0x6d, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x75, 0x76, 0x29, 0x0a, 0x7b, 0x0a, // dom(vec2 _uv).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, // return fract(sin
	0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x75, 0x76, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x76, 0x65, 0x63, // (dot(_uv.xy, vec
	0x32, 0x28, 0x31, 0x32, 0x2e, 0x39, 0x38, 0x39, 0x38, 0x2c, 0x20, 0x37, 0x38, 0x2e, 0x32, 0x33, // 2(12.9898, 78.23
	0x33, 0x29, 0x20, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, // 3) ) ) * 43758.5
	0x34, 0x35, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x66, 0x69, 0x78, // 453);.}.vec3 fix
	0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, // CubeLookup(vec3 
	0x5f, 0x76, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x2c, 0x20, // _v, float _lod, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, // float _topLevelC
	0x75, 0x62, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ubeSize).{.float
	0x20, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x76, 0x2e, 0x78, 0x29, 0x3b, //  ax = abs(_v.x);
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, // .float ay = abs(
	0x5f, 0x76, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x7a, 0x20, // _v.y);.float az 
	0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x76, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, // = abs(_v.z);.flo
	0x61, 0x74, 0x20, 0x76, 0x6d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x61, // at vmax = max(ma
	0x78, 0x28, 0x61, 0x78, 0x2c, 0x20, 0x61, 0x79, 0x29, 0x2c, 0x20, 0x61, 0x7a, 0x29, 0x3b, 0x0a, // x(ax, ay), az);.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x31, 0x2e, // float scale = 1.
	0x30, 0x20, 0x2d, 0x20, 0x65, 0x78, 0x70, 0x32, 0x28, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, 0x2f, // 0 - exp2(_lod) /
	0x20, 0x5f, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x75, 0x62, 0x65, 0x53, 0x69, //  _topLevelCubeSi
	0x7a, 0x65, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x61, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x76, 0x6d, // ze;.if (ax != vm
	0x61, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x5f, 0x76, 0x2e, 0x78, 0x20, 0x2a, 0x3d, 0x20, 0x73, 0x63, // ax) { _v.x *= sc
	0x61, 0x6c, 0x65, 0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x61, 0x79, 0x20, 0x21, 0x3d, // ale; }.if (ay !=
	0x20, 0x76, 0x6d, 0x61, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x5f, 0x76, 0x2e, 0x79, 0x20, 0x2a, 0x3d, //  vmax) { _v.y *=
	0x20, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x61, 0x7a, //  scale; }.if (az
	0x20, 0x21, 0x3d, 0x20, 0x76, 0x6d, 0x61, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x5f, 0x76, 0x2e, 0x7a, //  != vmax) { _v.z
	0x20, 0x2a, 0x3d, 0x20, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x3b, 0x20, 0x7d, 0x0a, 0x72, 0x65, 0x74, //  *= scale; }.ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, // urn _v;.}.vec2 t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x42, 0x63, 0x35, 0x28, 0x73, 0x61, 0x6d, 0x70, // exture2DBc5(samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // ler2D _sampler, 
	0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x75, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // vec2 _uv).{.retu
	0x72, 0x6e, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, // rn texture(_samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x75, 0x76, 0x29, 0x2e, 0x78, 0x79, 0x3b, 0x0a, 0x7d, 0x0a, // ler, _uv).xy;.}.
	0x6d, 0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x28, 0x6d, 0x61, // mat3 cofactor(ma
	0x74, 0x34, 0x20, 0x5f, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // t4 _m).{.return 
	0x6d, 0x61, 0x74, 0x33, 0x28, 0x0a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, // mat3(._m[1][1]*_
	0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x32, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x32, 0x5d, // m[2][2]-_m[1][2]
	0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x31, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, // *_m[2][1],._m[1]
	0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x30, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, // [2]*_m[2][0]-_m[
	0x31, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x32, 0x5d, 0x2c, 0x0a, // 1][0]*_m[2][2],.
	0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x31, // _m[1][0]*_m[2][1
	0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, // ]-_m[1][1]*_m[2]
	0x5b, 0x30, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, // [0],._m[0][2]*_m
	0x5b, 0x32, 0x5d, 0x5b, 0x31, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x31, 0x5d, 0x2a, // [2][1]-_m[0][1]*
	0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x32, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, // _m[2][2],._m[0][
	0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x32, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, // 0]*_m[2][2]-_m[0
	0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x30, 0x5d, 0x2c, 0x0a, 0x5f, // ][2]*_m[2][0],._
	0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x30, 0x5d, // m[0][1]*_m[2][0]
	0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, // -_m[0][0]*_m[2][
	0x31, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, // 1],._m[0][1]*_m[
	0x31, 0x5d, 0x5b, 0x32, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, // 1][2]-_m[0][2]*_
	0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x31, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x32, // m[1][1],._m[0][2
	0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x30, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, // ]*_m[1][0]-_m[0]
	0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x32, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, // [0]*_m[1][2],._m
	0x5b, 0x30, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x31, 0x5d, 0x2d, // [0][0]*_m[1][1]-
	0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x30, // _m[0][1]*_m[1][0
	0x5d, 0x0a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6f, 0x43, // ].);.}.float toC
	0x6c, 0x69, 0x70, 0x53, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x70, 0x74, 0x68, 0x28, 0x66, 0x6c, // lipSpaceDepth(fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // oat _depthTextur
	0x65, 0x5a, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x64, 0x65, // eZ).{.return _de
	0x70, 0x74, 0x68, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5a, 0x20, 0x2a, 0x20, 0x32, 0x2e, // pthTextureZ * 2.
	0x30, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // 0 - 1.0;.}.vec3 
	0x63, 0x6c, 0x69, 0x70, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x28, 0x6d, 0x61, 0x74, 0x34, // clipToWorld(mat4
	0x20, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x2c, 0x20, 0x76, //  _invViewProj, v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x50, 0x6f, 0x73, 0x29, 0x0a, 0x7b, 0x0a, // ec3 _clipPos).{.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x77, 0x70, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x5f, // vec4 wpos = ( (_
	0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x29, 0x20, 0x2a, 0x20, 0x28, // invViewProj) * (
	0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x50, 0x6f, 0x73, 0x2c, 0x20, 0x31, // vec4(_clipPos, 1
	0x2e, 0x30, 0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // .0) ) );.return 
	0x77, 0x70, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x77, 0x70, 0x6f, 0x73, 0x2e, // wpos.xyz / wpos.
	0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, // w;.}.void main()
	0x0a, 0x7b, 0x0a, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, // .{.gl_Position =
	0x20, 0x28, 0x20, 0x28, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, //  ( (u_modelViewP
	0x72, 0x6f, 0x6a, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x61, 0x5f, 0x70, // roj) * (vec4(a_p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x29, 0x20, // osition, 1.0) ) 
	0x29, 0x3b, 0x0a, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3d, 0x20, 0x61, 0x5f, // );.v_color0 = a_
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,                               // color0;.}..
};
